package ua.nure.efimov.summarytask4.entity;

import ua.nure.efimov.summarytask4.db.dao.Identified;

public class Answer implements Identified<Integer> {

	/**
	 * SerialVersion UID.
	 */
	private static final long serialVersionUID = 3867957818860410285L;
	/**
	 * Answer id.
	 */
	private Integer id;
	/**
	 * Variant of answer for test. For example - >'a' or 'b'.
	 */
	private char variant;
	/**
	 * Body of answer.
	 */
	private String body;

	/**
	 * It's question id ow current answer. For relation - one to many like in
	 * database.
	 */
	private int questionId;

	/**
	 * Specify if this answer correct - yes -> true.
	 */
	private boolean isCorrect;

	@Override
	public Integer getId() {
		return id;
	}

	/**
	 * @return the variant
	 */
	public char getVariant() {
		return variant;
	}

	/**
	 * @param variant
	 *            the variant to set
	 */
	public void setVariant(char variant) {
		this.variant = variant;
	}

	/**
	 * @return the body
	 */
	public String getBody() {
		return body;
	}

	/**
	 * @param body
	 *            the body to set
	 */
	public void setBody(String body) {
		this.body = body;
	}

	/**
	 * @param id
	 *            the id to set
	 */
	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * @return the isCorrect
	 */
	public boolean isCorrect() {
		return isCorrect;
	}

	/**
	 * @param isCorrect
	 *            the isCorrect to set
	 */
	public void setCorrect(boolean isCorrect) {
		this.isCorrect = isCorrect;
	}

	/**
	 * @return the questionId
	 */
	public int getQuestionId() {
		return questionId;
	}

	/**
	 * @param questionId
	 *            the questionId to set
	 */
	public void setQuestionId(int questionId) {
		this.questionId = questionId;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((body == null) ? 0 : body.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + (isCorrect ? 1231 : 1237);
		result = prime * result + questionId;
		result = prime * result + variant;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Answer other = (Answer) obj;
		if (body == null) {
			if (other.body != null)
				return false;
		} else if (!body.equals(other.body))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (isCorrect != other.isCorrect)
			return false;
		if (questionId != other.questionId)
			return false;
		if (variant != other.variant)
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Answer [id=" + id + ", variant=" + variant + ", body=" + body + ", questionId=" + questionId
				+ ", isCorrect=" + isCorrect + "]";
	}

}
