package ua.nure.efimov.summarytask4.listener;

import java.io.File;

import javax.servlet.ServletContext;
import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;
import javax.servlet.annotation.WebListener;

import org.apache.log4j.Logger;
import org.apache.log4j.xml.DOMConfigurator;

import ua.nure.efimov.summarytask4.exception.TechnicalException;
import ua.nure.efimov.summarytask4.utils.LogUtils;

@WebListener("application context listener")
public class ContextListener implements ServletContextListener {
	/**
	 * Logger.
	 */
	private static final Logger LOGGER = Logger.getLogger(ContextListener.class);

	@Override
	public void contextInitialized(ServletContextEvent event) {

		/**
		 * Initialize log4j.
		 */
		ServletContext context = event.getServletContext();
		try {
			initLog4J(context);
		} catch (TechnicalException e) {
			LOGGER.error(e);
		}
	}

	/**
	 * Initialize Log4j when the application is being started
	 * 
	 * @throws TechnicalException
	 *             if problem
	 */
	private void initLog4J(ServletContext context) throws TechnicalException {
		LogUtils.logDebug(LOGGER, "Log4j init started");

		try {
			// set path for saving logs to project deployed dir
			System.setProperty("rootPath", context.getRealPath("/"));
			String log4jConfigFile = context.getInitParameter("log4jConfiguration");
			String fullPath = context.getRealPath("") + File.separator + log4jConfigFile;

			DOMConfigurator.configure(fullPath);
			LogUtils.logDebug(LOGGER, "Log4j initialized");
		} catch (Exception e) {
			throw new TechnicalException("Problem during Logger init.");
		}
	}

	@Override
	public void contextDestroyed(ServletContextEvent event) {
		LogUtils.logDebug(LOGGER, "Log4j initialized");
	}

}